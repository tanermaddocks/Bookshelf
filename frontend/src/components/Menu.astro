---

---

<script>
  let request = async (method: string) => {
    const baseUrl = import.meta.env.PUBLIC_API_URL + "/books";
    const bookId = (
      document.querySelector(
        "input[name=book-select]:checked",
      ) as HTMLInputElement
    )?.id;

    let params: any;
    if (method == "POST") {
      let title = (document.getElementById("title") as HTMLInputElement).value
      let author = (document.getElementById("author") as HTMLInputElement).value
      let genres = (
            document.getElementById("genres") as HTMLInputElement
          ).value.split(", ")

      if (!title) {
        return alert("Fields marked with '*' are required.")
      }
      params = {
        targetUrl: baseUrl,
        body: JSON.stringify({
          title: title,
          author: author,
          genres: genres,
        }),
      };
    } else if (method == "DELETE") {
      if (!bookId) {
        return alert("Select a book to remove it!");
      }
      params = {
        targetUrl: baseUrl + "/" + bookId,
        body: null,
      };
    }
    const { targetUrl, body } = params;

    console.log(method, targetUrl, body);
    let response = await fetch(targetUrl, {
      method: method,
      headers: {
        "Content-Type": "application/json",
      },
      body: body,
    });

    let apiResponse = await response.json();
    console.log(apiResponse);

    location.reload();
  };

  const POST = document.querySelector("button#add")!;
  POST.addEventListener("click", () => {
    request("POST");
  });

  const DELETE = document.querySelector("button#remove")!;
  DELETE.addEventListener("click", () => {
    request("DELETE");
  });
</script>

<section class="menu">
  <img class="graphic" src="./src/assets/graphic.svg" alt="bookshelf graphic" />
  <menu>
    <h2>What would you like to do?</h2>
    <div class="menu-buttons">
      <!-- <button id="find">FIND</button> -->
      <button type="submit" id="add"> ADD </button>
      <!-- <button id="edit">EDIT</button> -->
      <button type="submit" id="remove"> REMOVE </button>
    </div>
  </menu>
</section>

<style>
  .menu {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding-bottom: 16px;
  }
  @media (min-width: 768px) {
    .menu {
      flex-direction: row;
    }
  }
  .graphic {
    max-width: 100vw;
    max-height: 25vh;
  }
  menu {
    all: unset;
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  h2 {
    margin-top: 0;
  }
  .menu-buttons {
    display: grid;
    grid-template-columns: 1fr 1fr;
    width: 90%;
    gap: 4px;
  }
  .menu-buttons button {
    padding: 12px;
    border-radius: 4px;
    font-weight: 600;
  }
  /* button#find {
    grid-area: 1 / 1 / span 1 / span 2;
  } */
  button#add {
    grid-area: 2 / 1 / span 1 / span 2;
  }
  /* button#edit {
    grid-area: 3 / 1;
  } */
  button#remove {
    grid-area: 3 / 1 / span 1 / span 2;
  }
</style>
